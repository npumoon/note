有啥好处：解耦、削峰。


## RabbitMQ

兔子logo、官方文档好看^_^

1. Erlang开发，源码不好啃。
2. 单机吞吐量 万级；
3. 支持 C# 
4. 微秒级（Erlang高级？） （其他都是 ms 级）

主从架构，高可用


##  RocketMQ
阿里系开源

1. 单机吞吐量 十万级
2. 顺序消息。（特殊场景，多个message hash到同一个queue后，由一个消费者拉取，orderly）
3. 支持分布式事务
4. topic量增大时，吞吐量小幅下降 （这是相比kafka来说的）

分布式架构，高可用 


## ActiveMQ
apache 下子项目

1. 单机吞吐量 万级

为什么感觉没什么亮眼的地方呢？

主从架构，高可用

## kafka

1. 单机吞吐量 十万级；
2. ms级以内延迟；
3. 天然适合大数据实时计算和日志采集
4. 提供核心功能，功能支持较少，保持超高的吞吐量，需保证topic量较少。

分布式架构，高可用

## redis

redis提供了发布订阅功能和阻塞队列功能。

实现简单，一般功能可满足，缺少持久化，回溯等

发布/订阅 (Pub/Sub)
Sorted Set
Lpush - Brpop （b: blocking的意思，阻塞队列，可以免去轮询）
